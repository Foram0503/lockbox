{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\php_project\\\\src\\\\components\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = ({\n  onBack\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      // TODO: Implement actual password reset logic\n      // This is a mock implementation\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success('Password reset instructions sent to your email!');\n      onBack();\n    } catch (error) {\n      toast.error('Failed to send reset instructions. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-6 text-center text-3xl font-extrabold text-gray-900\",\n          children: \"Reset your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-center text-sm text-gray-600\",\n          children: \"Enter your email address and we'll send you instructions to reset your password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-8 space-y-6\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-md shadow-sm -space-y-px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email-address\",\n              className: \"sr-only\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email-address\",\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true,\n              className: \"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\",\n              placeholder: \"Email address\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading,\n            className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: isLoading ? 'Sending...' : 'Send reset instructions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onBack,\n            className: \"font-medium text-green-600 hover:text-green-500\",\n            children: \"Back to login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"7QVCGsm+XhRzAVbq7+X8gVhTQw8=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","ForgotPassword","onBack","_s","email","setEmail","isLoading","setIsLoading","handleSubmit","e","preventDefault","Promise","resolve","setTimeout","success","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","type","autoComplete","required","placeholder","value","onChange","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/php_project/src/components/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst ForgotPassword = ({ onBack }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // TODO: Implement actual password reset logic\r\n      // This is a mock implementation\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      toast.success('Password reset instructions sent to your email!');\r\n      onBack();\r\n    } catch (error) {\r\n      toast.error('Failed to send reset instructions. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Reset your password\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Enter your email address and we'll send you instructions to reset your password.\r\n          </p>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? 'Sending...' : 'Send reset instructions'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"text-sm text-center\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onBack}\r\n              className=\"font-medium text-green-600 hover:text-green-500\"\r\n            >\r\n              Back to login\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}