{"ast":null,"code":"import axios from'axios';// Base URL for the API\nconst API_URL=process.env.REACT_APP_API_URL||'http://localhost/php_project/Lock Box/LockBox.php';// API key for authentication\nconst API_KEY=process.env.REACT_APP_API_KEY||'lock123';// Create axios instance with default config\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/x-www-form-urlencoded'},withCredentials:true// Enable sending cookies in cross-origin requests\n});// Helper function to format data for PHP backend\nconst formatData=data=>{return`json=${JSON.stringify({...data,api_key:API_KEY})}`;};// Authentication services\nexport const authService={// Login user\nlogin:async(email,password)=>{try{const response=await api.post('',formatData({email,password,validate:true}));if(response.data.code===1){// Store user data in localStorage\nconst userData={email:response.data.data.email,name:response.data.data.name,id:response.data.data.id,sessionId:response.data.data.session_id};localStorage.setItem('user',JSON.stringify(userData));}return response.data;}catch(error){console.error('Login error:',error);throw error;}},// Register new user\nregister:async(name,email,mobile,password)=>{try{const formData=new FormData();formData.append('json',JSON.stringify({api_key:API_KEY,add_user:true,name:name,email:email,mobile:mobile,password:password}));const response=await fetch(`${API_URL}`,{method:'POST',body:formData});const data=await response.json();return data;}catch(error){console.error('Registration error:',error);throw error;}},// Request password reset\nforgotPassword:async email=>{try{const response=await api.post('',formatData({email,send_mail_otp:true}));return response.data;}catch(error){console.error('Forgot password error:',error);throw error;}},// Logout user\nlogout:()=>{localStorage.removeItem('user');}};// Password management services\nexport const passwordService={// Add a new password\naddPassword:async(userId,password,platform,email)=>{try{const userData=JSON.parse(localStorage.getItem('user'));if(!userData||!userData.userId){throw new Error('User ID not found. Please login again.');}const response=await fetch(`${API_URL}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({api_key:API_KEY,add_password:true,user_id:userData.userId,password:password,platform:platform,email:email})});const data=await response.json();return data;}catch(error){console.error('Error adding password:',error);throw error;}},// Get all passwords for a user\ngetPasswords:async email=>{try{const response=await api.post('',formatData({email,get_pass:true}));if(response.data.code==='130'){return response.data;}else if(response.data.code==='132'||response.data.code==='133'){// Session expired or unauthorized\nauthService.logout();throw new Error('Session expired. Please login again.');}return response.data;}catch(error){console.error('Get passwords error:',error);throw error;}},// Update password\nupdatePassword:async passwordData=>{try{const response=await api.post('',formatData({id:passwordData.id,name:passwordData.platform,password:passwordData.password,update_password:true}));if(response.data.code==='150'){return response.data;}else if(response.data.code==='132'||response.data.code==='133'){// Session expired or unauthorized\nauthService.logout();throw new Error('Session expired. Please login again.');}throw new Error(response.data.message||'Failed to update password');}catch(error){console.error('Update password error:',error);throw error;}},// Export passwords\nexportPasswords:async email=>{try{const form=document.createElement('form');form.method='POST';form.action=API_URL;form.target='_blank';const jsonInput=document.createElement('input');jsonInput.type='hidden';jsonInput.name='json';jsonInput.value=JSON.stringify({api_key:API_KEY,export_passwords:true,email:email,format:'excel'});form.appendChild(jsonInput);document.body.appendChild(form);form.submit();document.body.removeChild(form);return{success:true};}catch(error){console.error('Export passwords error:',error);throw error;}},// Import passwords\nimportPasswords:async(email,csvFile)=>{try{const reader=new FileReader();return new Promise((resolve,reject)=>{reader.onload=async event=>{try{const csvData=event.target.result;const response=await api.post('',formatData({import_passwords:true,email:email,csv_data:csvData}));if(response.data.code==='172'){resolve(response.data);}else if(response.data.code==='132'||response.data.code==='133'){// Session expired or unauthorized\nauthService.logout();reject(new Error('Session expired. Please login again.'));}else{reject(new Error(response.data.message||'Failed to import passwords'));}}catch(error){reject(error);}};reader.onerror=()=>{reject(new Error('Failed to read CSV file'));};reader.readAsText(csvFile);});}catch(error){console.error('Import passwords error:',error);throw error;}},// Delete password\ndeletePassword:async passwordId=>{try{const response=await api.post('',formatData({delete_password:true,id:passwordId}));if(response.data.code==='160'){return response.data;}else if(response.data.code==='132'||response.data.code==='133'){// Session expired or unauthorized\nauthService.logout();throw new Error('Session expired. Please login again.');}throw new Error(response.data.message||'Failed to delete password');}catch(error){console.error('Delete password error:',error);throw error;}},// Generate password\ngeneratePassword:async()=>{try{const response=await api.post('',formatData({generate_password:true}));if(response.data.code==='180'){return response.data;}throw new Error('Failed to generate password');}catch(error){console.error('Generate password error:',error);throw error;}}};export default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","API_KEY","REACT_APP_API_KEY","api","create","baseURL","headers","withCredentials","formatData","data","JSON","stringify","api_key","authService","login","email","password","response","post","validate","code","userData","name","id","sessionId","session_id","localStorage","setItem","error","console","register","mobile","formData","FormData","append","add_user","fetch","method","body","json","forgotPassword","send_mail_otp","logout","removeItem","passwordService","addPassword","userId","platform","parse","getItem","Error","add_password","user_id","getPasswords","get_pass","updatePassword","passwordData","update_password","message","exportPasswords","form","document","createElement","action","target","jsonInput","type","value","export_passwords","format","appendChild","submit","removeChild","success","importPasswords","csvFile","reader","FileReader","Promise","resolve","reject","onload","event","csvData","result","import_passwords","csv_data","onerror","readAsText","deletePassword","passwordId","delete_password","generatePassword","generate_password"],"sources":["C:/xampp/htdocs/php_project/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for the API\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost/php_project/Lock Box/LockBox.php';\r\n\r\n// API key for authentication\r\nconst API_KEY = process.env.REACT_APP_API_KEY || 'lock123';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  },\r\n  withCredentials: true, // Enable sending cookies in cross-origin requests\r\n});\r\n\r\n// Helper function to format data for PHP backend\r\nconst formatData = (data) => {\r\n  return `json=${JSON.stringify({ ...data, api_key: API_KEY })}`;\r\n};\r\n\r\n// Authentication services\r\nexport const authService = {\r\n  // Login user\r\n  login: async (email, password) => {\r\n    try {\r\n      const response = await api.post('', formatData({ \r\n        email, \r\n        password,\r\n        validate: true \r\n      }));\r\n      \r\n      if (response.data.code === 1) {\r\n        // Store user data in localStorage\r\n        const userData = {\r\n          email: response.data.data.email,\r\n          name: response.data.data.name,\r\n          id: response.data.data.id,\r\n          sessionId: response.data.data.session_id\r\n        };\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Register new user\r\n  register: async (name, email, mobile, password) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('json', JSON.stringify({\r\n        api_key: API_KEY,\r\n        add_user: true,\r\n        name: name,\r\n        email: email,\r\n        mobile: mobile,\r\n        password: password\r\n      }));\r\n\r\n      const response = await fetch(`${API_URL}`, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Request password reset\r\n  forgotPassword: async (email) => {\r\n    try {\r\n      const response = await api.post('', formatData({ \r\n        email,\r\n        send_mail_otp: true \r\n      }));\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Forgot password error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  logout: () => {\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\n// Password management services\r\nexport const passwordService = {\r\n  // Add a new password\r\n  addPassword: async (userId, password, platform, email) => {\r\n    try {\r\n      const userData = JSON.parse(localStorage.getItem('user'));\r\n      if (!userData || !userData.userId) {\r\n        throw new Error('User ID not found. Please login again.');\r\n      }\r\n\r\n      const response = await fetch(`${API_URL}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          api_key: API_KEY,\r\n          add_password: true,\r\n          user_id: userData.userId,\r\n          password: password,\r\n          platform: platform,\r\n          email: email\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error adding password:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get all passwords for a user\r\n  getPasswords: async (email) => {\r\n    try {\r\n      const response = await api.post('', formatData({ \r\n        email,\r\n        get_pass: true \r\n      }));\r\n      \r\n      if (response.data.code === '130') {\r\n        return response.data;\r\n      } else if (response.data.code === '132' || response.data.code === '133') {\r\n        // Session expired or unauthorized\r\n        authService.logout();\r\n        throw new Error('Session expired. Please login again.');\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get passwords error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update password\r\n  updatePassword: async (passwordData) => {\r\n    try {\r\n      const response = await api.post('', formatData({\r\n        id: passwordData.id,\r\n        name: passwordData.platform,\r\n        password: passwordData.password,\r\n        update_password: true\r\n      }));\r\n      \r\n      if (response.data.code === '150') {\r\n        return response.data;\r\n      } else if (response.data.code === '132' || response.data.code === '133') {\r\n        // Session expired or unauthorized\r\n        authService.logout();\r\n        throw new Error('Session expired. Please login again.');\r\n      }\r\n      \r\n      throw new Error(response.data.message || 'Failed to update password');\r\n    } catch (error) {\r\n      console.error('Update password error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Export passwords\r\n  exportPasswords: async (email) => {\r\n    try {\r\n      const form = document.createElement('form');\r\n      form.method = 'POST';\r\n      form.action = API_URL;\r\n      form.target = '_blank';\r\n      \r\n      const jsonInput = document.createElement('input');\r\n      jsonInput.type = 'hidden';\r\n      jsonInput.name = 'json';\r\n      jsonInput.value = JSON.stringify({\r\n        api_key: API_KEY,\r\n        export_passwords: true,\r\n        email: email,\r\n        format: 'excel'\r\n      });\r\n      form.appendChild(jsonInput);\r\n      \r\n      document.body.appendChild(form);\r\n      form.submit();\r\n      document.body.removeChild(form);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Export passwords error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Import passwords\r\n  importPasswords: async (email, csvFile) => {\r\n    try {\r\n      const reader = new FileReader();\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reader.onload = async (event) => {\r\n          try {\r\n            const csvData = event.target.result;\r\n            \r\n            const response = await api.post('', formatData({\r\n              import_passwords: true,\r\n              email: email,\r\n              csv_data: csvData\r\n            }));\r\n            \r\n            if (response.data.code === '172') {\r\n              resolve(response.data);\r\n            } else if (response.data.code === '132' || response.data.code === '133') {\r\n              // Session expired or unauthorized\r\n              authService.logout();\r\n              reject(new Error('Session expired. Please login again.'));\r\n            } else {\r\n              reject(new Error(response.data.message || 'Failed to import passwords'));\r\n            }\r\n          } catch (error) {\r\n            reject(error);\r\n          }\r\n        };\r\n        \r\n        reader.onerror = () => {\r\n          reject(new Error('Failed to read CSV file'));\r\n        };\r\n        \r\n        reader.readAsText(csvFile);\r\n      });\r\n    } catch (error) {\r\n      console.error('Import passwords error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete password\r\n  deletePassword: async (passwordId) => {\r\n    try {\r\n      const response = await api.post('', formatData({\r\n        delete_password: true,\r\n        id: passwordId\r\n      }));\r\n      \r\n      if (response.data.code === '160') {\r\n        return response.data;\r\n      } else if (response.data.code === '132' || response.data.code === '133') {\r\n        // Session expired or unauthorized\r\n        authService.logout();\r\n        throw new Error('Session expired. Please login again.');\r\n      }\r\n      \r\n      throw new Error(response.data.message || 'Failed to delete password');\r\n    } catch (error) {\r\n      console.error('Delete password error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Generate password\r\n  generatePassword: async () => {\r\n    try {\r\n      const response = await api.post('', formatData({\r\n        generate_password: true\r\n      }));\r\n      \r\n      if (response.data.code === '180') {\r\n        return response.data;\r\n      }\r\n      \r\n      throw new Error('Failed to generate password');\r\n    } catch (error) {\r\n      console.error('Generate password error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}